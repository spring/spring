//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NTaiToolkit {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class NTaiToolkit_Form1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal NTaiToolkit_Form1() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NTaiToolkit.NTaiToolkit.Form1", typeof(NTaiToolkit_Form1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Q: Fast &amp; Dirty Configs Howto
        ///
        ///1: Start NTai with your mod to generate a blank config then open it.
        ///2: Create a very basic tasklist, say b_mex b_mex b_power b_factory, and call it the commander1 list.
        ///3: Now goto the units tab, select your commander units and assign them the commanders tasklist by checking the commanders item at the right.
        ///4: Goto the Global Config tab and turn off Antistall algorithm and set the initial handicap to 50.
        ///5: Now save your config and start NTai again.
        ///6: Congratulations your c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string richTextBox1_Text {
            get {
                return ResourceManager.GetString("richTextBox1.Text", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap StartTab_BackgroundImage {
            get {
                object obj = ResourceManager.GetObject("StartTab.BackgroundImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap tabPage1_BackgroundImage {
            get {
                object obj = ResourceManager.GetObject("tabPage1.BackgroundImage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
