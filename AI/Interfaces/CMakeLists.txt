### AI Interfaces
#
# BUILD_C_AIINTERFACE and BUILD_Java_AIINTERFACE
# are set in this file (PARENT_SCOPE),
# and used in ../Skirmish/CMakeLists.txt
#

add_definitions(-DBUILDING_AI_INTERFACE)

set(AI_INTERFACES_SRC "${CMAKE_SOURCE_DIR}/AI/Interfaces")
set(AI_INTERFACES_DATA "${AIDIR}/AI/Interfaces")
IF (UNIX)
	set(SHELL_EXEC_POSTFIX "sh")
ELSE (UNIX)
	set(SHELL_EXEC_POSTFIX "bat")
ENDIF(UNIX)

#set(AIINTERFACE_FIND_QUIETLY True)


# C & C++ AI Interface
set(C_AIINTERFACE_SRC "${AI_INTERFACES_SRC}/C")
if (EXISTS ${C_AIINTERFACE_SRC})
	set(BUILD_C_AIINTERFACE TRUE)
else (EXISTS ${C_AIINTERFACE_SRC})
	set(BUILD_C_AIINTERFACE FALSE)
	message ("warning: C AI Interface will not be built!")
endif (EXISTS ${C_AIINTERFACE_SRC})
set(BUILD_C_AIINTERFACE ${BUILD_C_AIINTERFACE} PARENT_SCOPE)

if (BUILD_C_AIINTERFACE)
	set(C_AIINTERFACE_VERS "UNKNOWN_VERSION")
	if (EXISTS ${C_AIINTERFACE_SRC}/VERSION)
		file(STRINGS "${C_AIINTERFACE_SRC}/VERSION" C_AIINTERFACE_VERS LIMIT_COUNT 1)
	endif (EXISTS ${C_AIINTERFACE_SRC}/VERSION)
	#set(C_AIINTERFACE_TARGET "C-${C_AIINTERFACE_VERS}")
	set(C_AIINTERFACE_TARGET "C")
	set(C_AIINTERFACE_DATA_DIR ${AI_INTERFACES_DATA}/C/${C_AIINTERFACE_VERS})
	if (NOT AIINTERFACE_FIND_QUIETLY)
		message(STATUS "Found AI Interface: C ${C_AIINTERFACE_VERS}")
	endif (NOT AIINTERFACE_FIND_QUIETLY)

	# install data files
	install(DIRECTORY "${C_AIINTERFACE_SRC}/data/"
			DESTINATION "${C_AIINTERFACE_DATA_DIR}")

	aux_source_directory(${C_AIINTERFACE_SRC} cAIInterface)
	list (APPEND cAIInterface ${CMAKE_SOURCE_DIR}/rts/System/Platform/SharedLib)
	if (UNIX)
		list (APPEND cAIInterface ${CMAKE_SOURCE_DIR}/rts/System/Platform/Linux/SoLib)
	else (UNIX)
		list (APPEND cAIInterface ${CMAKE_SOURCE_DIR}/rts/System/Platform/Win/DllLib)
	endif (UNIX)
	add_library(${C_AIINTERFACE_TARGET} MODULE ${cAIInterface} ${aienv} ${cutilsenv}) # ${errorhandler})
	set_target_properties(${C_AIINTERFACE_TARGET} PROPERTIES OUTPUT_NAME "AIInterface")
	set_target_properties(${C_AIINTERFACE_TARGET} PROPERTIES LIBRARY_OUTPUT_DIRECTORY "C")
	install(TARGETS ${C_AIINTERFACE_TARGET} DESTINATION ${C_AIINTERFACE_DATA_DIR})
endif (BUILD_C_AIINTERFACE)


# Java AI Interface
if (NOT JAVA_FOUND)
	set(JAVA_FIND_QUIETLY ${AIINTERFACE_FIND_QUIETLY})
	FIND_PACKAGE(JavaExtended) # Note: this is not the CMake builtin FindJava
endif (NOT JAVA_FOUND)
IF (MINGW)
	set (JAVA_JVM_LIBRARY jvm)
	set (JNI_FOUND TRUE)
ELSE (MINGW)
	FIND_PACKAGE(JNI)
	if (JAVA_INCLUDE_PATH)
		set (JNI_FOUND TRUE)
		include_directories(${JAVA_INCLUDE_PATH} ${JAVA_INCLUDE_PATH2} ${JNI_INCLUDE_DIRS})
	else (JAVA_INCLUDE_PATH)
		set (JNI_FOUND FALSE)
		message ("warning: No Java includes found!")
	endif (JAVA_INCLUDE_PATH)
ENDIF (MINGW)
set(Java_AIINTERFACE_SRC "${AI_INTERFACES_SRC}/Java")
if (JNI_FOUND AND JAVA_FOUND AND EXISTS ${Java_AIINTERFACE_SRC} AND EXISTS ${Java_AIINTERFACE_SRC}/bin)
	set(BUILD_Java_AIINTERFACE TRUE)
	
	set(JAVA_FOUND ${JAVA_FOUND} PARENT_SCOPE)
	set(JAVA_HOME ${JAVA_HOME} PARENT_SCOPE)
	set(JAVA_BIN_PATH ${JAVA_BIN_PATH} PARENT_SCOPE)
	set(JAVA_RUNTIME ${JAVA_RUNTIME} PARENT_SCOPE)
	set(JAVA_COMPILE ${JAVA_COMPILE} PARENT_SCOPE)
	set(JAVA_ARCHIVE ${JAVA_ARCHIVE} PARENT_SCOPE)
	set(JAVA_DOC ${JAVA_DOC} PARENT_SCOPE)
	set(JAVA_MAJOR_VERSION ${JAVA_MAJOR_VERSION} PARENT_SCOPE)
	set(JAVA_MINOR_VERSION ${JAVA_MINOR_VERSION} PARENT_SCOPE)
	set(JAVA_PATCH_LEVEL ${JAVA_PATCH_LEVEL} PARENT_SCOPE)
	set(JAVA_VERSION ${JAVA_VERSION} PARENT_SCOPE)
else (JNI_FOUND AND JAVA_FOUND AND EXISTS ${Java_AIINTERFACE_SRC} AND EXISTS ${Java_AIINTERFACE_SRC}/bin)
	set(BUILD_Java_AIINTERFACE FALSE)
	message ("warning: Java AI Interface will not be built!")
endif (JNI_FOUND AND JAVA_FOUND AND EXISTS ${Java_AIINTERFACE_SRC} AND EXISTS ${Java_AIINTERFACE_SRC}/bin)
set(BUILD_Java_AIINTERFACE ${BUILD_Java_AIINTERFACE} PARENT_SCOPE)

if (BUILD_Java_AIINTERFACE)
	set(Java_AIINTERFACE_VERS "UNKNOWN_VERSION")
	if (EXISTS ${Java_AIINTERFACE_SRC}/VERSION)
		file(STRINGS "${Java_AIINTERFACE_SRC}/VERSION" Java_AIINTERFACE_VERS LIMIT_COUNT 1)
	endif (EXISTS ${Java_AIINTERFACE_SRC}/VERSION)
	#set(Java_AIINTERFACE_TARGET "Java-${Java_AIINTERFACE_VERS}")
	set(Java_AIINTERFACE_TARGET "Java")
	set(Java_AIINTERFACE_DATA_DIR ${AI_INTERFACES_DATA}/Java/${Java_AIINTERFACE_VERS})
	set(Java_AIINTERFACE_PKG "com/clan_sy/spring/ai")
	set(Java_AIINTERFACE_PKG_FIRST_PART "com")
	set(Java_AIINTERFACE_CLASSPATH ".:${PATH_DELIM}${Java_AIINTERFACE_SRC}/data/jlib/jna/jna.jar${PATH_DELIM}${Java_AIINTERFACE_SRC}/data/jlib/vecmath.jar")
	if (NOT AIINTERFACE_FIND_QUIETLY)
		message(STATUS "Found AI Interface: Java ${Java_AIINTERFACE_VERS}")
	endif (NOT AIINTERFACE_FIND_QUIETLY)

	# install data files
	install(DIRECTORY "${Java_AIINTERFACE_SRC}/data/"
			DESTINATION "${Java_AIINTERFACE_DATA_DIR}")

	# handle native part
	aux_source_directory(${Java_AIINTERFACE_SRC} javaAIInterface)
	add_library(${Java_AIINTERFACE_TARGET} MODULE ${javaAIInterface} ${aienv} ${cutilsenv})
	target_link_libraries(${Java_AIINTERFACE_TARGET} ${JAVA_JVM_LIBRARY})
	install(TARGETS ${Java_AIINTERFACE_TARGET} DESTINATION ${Java_AIINTERFACE_DATA_DIR})
	INCLUDE_DIRECTORIES(BEFORE ${CMAKE_SOURCE_DIR}/rts/lib/streflop)
	TARGET_LINK_LIBRARIES(${Java_AIINTERFACE_TARGET} streflop)
	set_target_properties(${Java_AIINTERFACE_TARGET} PROPERTIES COMPILE_FLAGS "-DSTREFLOP_SSE")
	set_target_properties(${Java_AIINTERFACE_TARGET} PROPERTIES OUTPUT_NAME "AIInterface")
	set_target_properties(${Java_AIINTERFACE_TARGET} PROPERTIES LIBRARY_OUTPUT_DIRECTORY "Java")

	# handle Java part
	file(REMOVE_RECURSE "${Java_AIINTERFACE_SRC}/build")
	file(MAKE_DIRECTORY "${Java_AIINTERFACE_SRC}/build")
	#set(JAVA_BUILD_DIR "./")
	#file(MAKE_DIRECTORY "abcdefgh")
	
	
	message("PROJECT_BINARY_DIR: ${PROJECT_BINARY_DIR}")
	message("CMAKE_PROJECT_BINARY_DIR: ${CMAKE_PROJECT_BINARY_DIR}")
	message("LIBRARY_OUTPUT_DIRECTORY: ${LIBRARY_OUTPUT_DIRECTORY}")
	message("CMAKE_LIBRARY_OUTPUT_DIRECTORY: ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
	message("LIBRARY_OUTPUT_PATH: ${LIBRARY_OUTPUT_PATH}")
	message("CMAKE_LIBRARY_OUTPUT_PATH: ${CMAKE_LIBRARY_OUTPUT_PATH}")
	message("ARCHIVE_OUTPUT_DIRECTORY: ${ARCHIVE_OUTPUT_DIRECTORY}")
	message("LIBRARY_OUTPUT_DIRECTORY: ${LIBRARY_OUTPUT_DIRECTORY}")
	message("RUNTIME_OUTPUT_DIRECTORY: ${RUNTIME_OUTPUT_DIRECTORY}")
	message("CMAKE_ARCHIVE_OUTPUT_DIRECTORY: ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}")
	message("CMAKE_LIBRARY_OUTPUT_DIRECTORY: ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
	message("CMAKE_RUNTIME_OUTPUT_DIRECTORY: ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
	
	
	file(GLOB_RECURSE Java_AIINTERFACE_JAVA_SOURCES RELATIVE "${Java_AIINTERFACE_SRC}/java/src" FOLLOW_SYMLINKS "${Java_AIINTERFACE_SRC}/java/src/*.java")
	add_custom_command(TARGET ${Java_AIINTERFACE_TARGET} POST_BUILD
		COMMAND "${Java_AIINTERFACE_SRC}/bin/java_generateWrappers.${SHELL_EXEC_POSTFIX}" ARGS "${Java_AIINTERFACE_VERS}"
		WORKING_DIRECTORY "${Java_AIINTERFACE_SRC}/bin"
		COMMENT "  Generating Java source files ..." VERBATIM)
	add_custom_command(TARGET ${Java_AIINTERFACE_TARGET} POST_BUILD
		COMMAND "${JAVA_COMPILE}" "-cp" "${Java_AIINTERFACE_CLASSPATH}" "-d" "${Java_AIINTERFACE_SRC}/build" ${Java_AIINTERFACE_JAVA_SOURCES}
		WORKING_DIRECTORY "${Java_AIINTERFACE_SRC}/java/src"
		COMMENT "  Compiling Java sources ..." VERBATIM)
	add_custom_command(TARGET ${Java_AIINTERFACE_TARGET} POST_BUILD
		COMMAND "${JAVA_ARCHIVE}" "cmf" "${Java_AIINTERFACE_SRC}/java/src/manifest.mf" "${Java_AIINTERFACE_SRC}/AIInterface.jar" "-C" "${Java_AIINTERFACE_SRC}/build" "${Java_AIINTERFACE_PKG_FIRST_PART}"
		WORKING_DIRECTORY "${Java_AIINTERFACE_SRC}/bin"
		COMMENT "  Creating Java library AIInterface.jar ..." VERBATIM)
	add_custom_command(TARGET ${Java_AIINTERFACE_TARGET} POST_BUILD
		COMMAND "${JAVA_ARCHIVE}" "cf" "${Java_AIINTERFACE_SRC}/AIInterface-src.jar" "-C" "${Java_AIINTERFACE_SRC}/java/src" "${Java_AIINTERFACE_PKG_FIRST_PART}"
		WORKING_DIRECTORY "${Java_AIINTERFACE_SRC}/bin"
		COMMENT "  Creating Java library AIInterface-src.jar ..." VERBATIM)
	install(FILES ${Java_AIINTERFACE_SRC}/AIInterface.jar DESTINATION ${Java_AIINTERFACE_DATA_DIR})
	install(FILES ${Java_AIINTERFACE_SRC}/AIInterface-src.jar DESTINATION ${Java_AIINTERFACE_DATA_DIR}/jlib)
	#install(DIRECTORY ${Java_AIINTERFACE_SRC}/jlib/ DESTINATION ${Java_AIINTERFACE_DATA_DIR}/jlib FILES_MATCHING PATTERN "*.jar")
endif (BUILD_Java_AIINTERFACE)

