# These options are passed to the JVM instance in which all Java AIs run in.
# CAUTION: Please only change these settings if you know what you are doing!!
# For a list of possible options, please see:
# http://blogs.sun.com/watt/resource/jvm-options-list.html
# and:
# http://java.sun.com/javase/technologies/hotspot/vmoptions.jsp
# If you use do not use the SUN JVM,
# the supported options may differ from this list.
# Each line that does not start with '#' or ';' and contians
# other characters then whitespaces is taken as an option.
#
# NOTE: When specifying relative paths to files (eg. log files),
# be aware that these files will likely end up in springs writable data dir,
# though this is not guaranteed, which means you may have to search for them
# in the CWD of the JVM, which differs between platforms.
#
# NOTE: When specifying paths to files (eg. log files),
# you can make use of ${home-dir}, which will be replaced with something like:
# "{abs-path-to-spring-writable-data-dir}/AI/Interfaces/Java/0.1"
#

# There are two ways of specifying basic JVM options in this file:
# 1) jvm.option.x
# 2) jvm.option.debug.x
# The first kind is always used, while the second is only used
# if either one of the following is true:
# * jvm.useDebugOptions is set to true
# * jvm.useDebugOptions is set to auto, and a debug build
#   of the Java AI Interface native library is in use
# possible values: auto, true, false
# default: auto
;jvm.useDebugOptions=true

# NOTE: only really usefull for debugging
# false: crash and report error when a JVM option was specified,
# that is unknonwn to the used JVM
# default: true
;jvm.arguments.ignoreUnrecognized=false

# NOTE: change this if you need fancy stuff only
# specify as hex value, eg. 0x00010004 is JNI_VERSION_1_4
# see jni.h (look for JNI_VERSION_* defines)
# default: 0x00010004
;jvm.jni.version=0x00010002


# NOTE: this should not be used, as it is auto-generated
;jvm.option.java.class.path=...
# you may simply store .jar and .class files in the jlib/ folder
# of the Java AI Interface or your Java Skirmish AI.
# the value of this property is appended to the generated java.class.path

# NOTE: you shall NOT specify the following, as they are auto-generated:
;jvm.option.java.library.path=...
# simply store .dll, .so or .dylib files in the lib/ folder
# of the Java AI Interface or your Java Skirmish AI.
# the value of this property is appended to the generated java.library.path

# use the server JVM (default for 64bit systems)
;jvm.option.x=-server

# NOTE: do not use these, as the interface will ignore them;
# see jvm.option.java.*.path options above
;jvm.option.x=-Djava.class.path=...
;jvm.option.x=-Djava.library.path=...

# footprint (memory) related
jvm.option.x=-Xms16M
jvm.option.x=-Xmx64M
jvm.option.x=-Xss512K
jvm.option.x=-Xoss400K


# Misc
;jvm.option.x=-XX:+AlwaysRestoreFPU
;jvm.option.x=-Djava.util.logging.config.file=./logging.properties

# Turns on stricter class-file format specification checks.
jvm.option.x=-Xfuture


# logging related (only recommended when debugging)
jvm.option.debug.x=-Xcheck:jni
jvm.option.debug.x=-verbose:jni
jvm.option.debug.x=-XX:+UnlockDiagnosticVMOptions
jvm.option.debug.x=-XX:+LogVMOutput
jvm.option.debug.x=-XX:LogFile=${home-dir}/log/jvm-log.xml
;jvm.option.debug.x=-XX:LogFile=/tmp/spring-Java-AI-Interface-jvm-log.xml


# debugging related
jvm.option.debug.x=-Xdebug
jvm.option.debug.x=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=7777
# disable JIT (required for debugging under the classical VM)
;jvm.option.debug.x=-Djava.compiler=NONE
# disables old JDB
jvm.option.debug.x=-Xnoagent
# helps with finding JNA related problems
# see: https://jna.dev.java.net/#struct_debug
;jvm.option.debug.x=-Djna.dump_memory=true
;jvm.option.debug.x=-XX:ErrorFile=./hs_err_pid<pid>.log
;jvm.option.debug.x=-XX:+CheckJNICalls

