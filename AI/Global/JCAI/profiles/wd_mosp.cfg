// World Domination AI profile

// the "build speed" used here is calculated from the actual build speed, the move speed, and the health
BuildSpeedPerMetalIncome = 0.05


// To optimize building the beginning of the base - this has to be a buildoptions node 
InitialBuildOrders = buildoptions 
{ 
	ihcgasp*2 {handler=Resource}
	ihcmine*2 {handler=Resource}
} 


ResourceInfo = 
{
	EnergyBuildRatio = 1.2 
	MetalBuildRatio = 1 

	EnergyBuildHeuristic = 
	{ 
		BuildTime = 1 
		MetalCost = 2 
		EnergyCost = 2 

		MaxUpscale = 2 
	} 

	// This applies to both metal makers and metal extractors 
	MetalBuildHeuristic = 
	{ 
		PaybackTimeFactor = -10 
		EnergyUsageFactor = -100 
		ThreatConversionFactor = 1 
		PrefUpscale = 2 
		UpscaleOvershootFactor = -50 
	} 

	MetalExtracters = 
	{ 
		ihcmine 
		ihcmfac 
	} 

	MetalMakers = 
	{} 

	EnergyMakers = 
	{ 
		ihcnukp 
		ihcgasp 
		ihcdgsp 
	} 

	EnablePolicy = 
	{ 
		MinUnitEnergyUsage=60 
		MinEnergy=0.1 
		MaxEnergy=0.85 // it's best to keep this below Storage.MaxRatio 
	} 

	Storage = 
	{ 
		MetalStorage = ihccont 
		EnergyStorage = ihcbatt 
		MaxRatio = 0.9 // The resource handler will build storage when Resource > ResourceStorage * MaxRatio 
		MinMetalIncome = 4 // minimum metal income before it builds storage 
		MinEnergyIncome = 80 

		// These maximums define the point where no more storage is build (so resources are spilled) 
		// They have to be multiplied by the energy income to get the real maximum: 
		// Max = Income * MaxStorageFactor 
		MaxEnergyStorageFactor = 500 
		MaxMetalStorageFactor = 1000 
	}
}

ForceInfo =
{
	DefaultSpread = 600 

	RushForce = 
	{ 
		task = attackdefend 
		// the units fields always has to be a buildoptions value 
		units= buildoptions { ihcreco } 
		batchsize=4 
		category=2 
		level=1 
		minmetal=6 
	} 

	BasicForce1 = 
	{
		task = attackdefend 
		// the units fields always has to be a buildoptions value 
		units= buildoptions { ihctow*2 mospgren*3 } 
		batchsize=4 
		category=2 
		level=2
		minmetal=7 
	} 

	KbotForce1 = 
	{ 
		task = attackdefend 
		units = buildoptions { ihcgi*5 mospguard*3 ihcstin*3 } 
		batchsize=6 
		category=3 
		level=3 
		minmetal=7 
	} 

	AdvForce1 = 
	{ 
		task=attackdefend 
		units = buildoptions { T72*4 BMP3*5 } 
		batchsize=10 
		category=2 
		level=10 
		minmetal=35 
	} 

	AdvForce2 = 
	{ 
		task=attackdefend 
		units= buildoptions { T80*4 Corshilka*3 BM21*3 mospadvat*5 } 
		batchsize=10 
		category=2 
		level=11 
		minmetal=45 
	} 

	AirForce1 = 
	{ 
		task=attackdefend 
		units = buildoptions { Albatross } 
		batchsize=6 
		category=4 
		level=1 
		minmetal=12
		minenergy=230 
	} 

	AirForce2 = 
	{ 
		task=attackdefend 
		units= buildoptions { corflog } 
		batchsize=12 
		category=4 
		level=2 
		minmetal=20 
		minenergy=330 
	}

}

//------------------------------------------------------------------------------------------ 
// Recon handler config 
//------------------------------------------------------------------------------------------ 
ReconInfo = 
{ 
   UpdateInterval = 6 // Can be used to set frequency of recon updates, to reduce CPU use. 
   MaxForce = 5 

   Scouts = buildoptions 
   { 
      IHCRECO*2 
   } 

   SearchHeuristic = 
   { 
      // Higher score is better 
      TimeFactor = 0.015 
      DistanceFactor = -2 
      ThreatFactor = -0.5 

      // Something to keep in mind when modifying this:       
      // Per-unit CPU costs of using a nonzero spreadfactor increases linearly with the number of recon units. 
      // It's probably best to set SpreadFactor=0 when using a lot of recon units 
      SpreadFactor = 200 
   } 
} 

//------------------------------------------------------------------------------------------ 
// Support handler config 
//------------------------------------------------------------------------------------------ 
// The support handler can be used to create tasks for things like defenses or radar 
SupportInfo = 
{ 
	groups = {
		basic1 = { 
			units=buildoptions{ natopb ihcrad  } 
			minmetal = 4
		}
	}

}
