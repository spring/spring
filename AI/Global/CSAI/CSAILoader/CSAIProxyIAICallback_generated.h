// *** This is a generated file; if you want to change it, please change GlobalAIInterfaces.dll, which is the reference
// 
// This file was generated by CSAIProxyGenerator, by Hugh Perkins hughperkins@gmail.com http://manageddreams.com
// 
   double GetUnitDefHeight( int def )
   {
      return self->GetUnitDefHeight( def  );
   }

   double GetUnitDefRadius( int def )
   {
      return self->GetUnitDefRadius( def  );
   }

   int GetNumUnitDefs(  )
   {
      return self->GetNumUnitDefs(   );
   }

   double GetFeatureReclaimLeft( int feature )
   {
      return self->GetFeatureReclaimLeft( feature  );
   }

   double GetFeatureHealth( int feature )
   {
      return self->GetFeatureHealth( feature  );
   }

   double GetEnergyStorage(  )
   {
      return self->GetEnergyStorage(   );
   }

   double GetEnergyUsage(  )
   {
      return self->GetEnergyUsage(   );
   }

   double GetEnergyIncome(  )
   {
      return self->GetEnergyIncome(   );
   }

   double GetEnergy(  )
   {
      return self->GetEnergy(   );
   }

   double GetMetalStorage(  )
   {
      return self->GetMetalStorage(   );
   }

   double GetMetalUsage(  )
   {
      return self->GetMetalUsage(   );
   }

   double GetMetalIncome(  )
   {
      return self->GetMetalIncome(   );
   }

   double GetMetal(  )
   {
      return self->GetMetal(   );
   }

   double GetElevation( double x, double z )
   {
      return self->GetElevation( x, z  );
   }

   double GetGravity(  )
   {
      return self->GetGravity(   );
   }

   double GetTidalStrength(  )
   {
      return self->GetTidalStrength(   );
   }

   double GetMaxWind(  )
   {
      return self->GetMaxWind(   );
   }

   double GetMinWind(  )
   {
      return self->GetMinWind(   );
   }

   double GetExtractorRadius(  )
   {
      return self->GetExtractorRadius(   );
   }

   double GetMaxMetal(  )
   {
      return self->GetMaxMetal(   );
   }

   int GetMapHeight(  )
   {
      return self->GetMapHeight(   );
   }

   int GetMapWidth(  )
   {
      return self->GetMapWidth(   );
   }

   bool IsUnitParalyzed( int unitid )
   {
      return self->IsUnitParalyzed( unitid  );
   }

   bool IsUnitCloaked( int unitid )
   {
      return self->IsUnitCloaked( unitid  );
   }

   int GetBuildingFacing( int unitid )
   {
      return self->GetBuildingFacing( unitid  );
   }

   bool UnitBeingBuilt( int unitid )
   {
      return self->UnitBeingBuilt( unitid  );
   }

   bool IsUnitActivated( int unitid )
   {
      return self->IsUnitActivated( unitid  );
   }

   double GetUnitMaxRange( int unitid )
   {
      return self->GetUnitMaxRange( unitid  );
   }

   double GetUnitExperience( int unitid )
   {
      return self->GetUnitExperience( unitid  );
   }

   double GetUnitPower( int unitid )
   {
      return self->GetUnitPower( unitid  );
   }

   double GetUnitSpeed( int unitid )
   {
      return self->GetUnitSpeed( unitid  );
   }

   double GetUnitMaxHealth( int unitid )
   {
      return self->GetUnitMaxHealth( unitid  );
   }

   double GetUnitHealth( int unitid )
   {
      return self->GetUnitHealth( unitid  );
   }

   int GetUnitAllyTeam( int unitid )
   {
      return self->GetUnitAllyTeam( unitid  );
   }

   int GetUnitTeam( int unitid )
   {
      return self->GetUnitTeam( unitid  );
   }

   int GetUnitAiHint( int unitid )
   {
      return self->GetUnitAiHint( unitid  );
   }

   int GetUnitGroup( int unitid )
   {
      return self->GetUnitGroup( unitid  );
   }

   bool RemoveUnitFromGroup( int unitid )
   {
      return self->RemoveUnitFromGroup( unitid  );
   }

   bool AddUnitToGroup( int unitid, int groupid )
   {
      return self->AddUnitToGroup( unitid, groupid  );
   }

   int GetPlayerTeam( int player )
   {
      return self->GetPlayerTeam( player  );
   }

   int GetMyAllyTeam(  )
   {
      return self->GetMyAllyTeam(   );
   }

   int GetMyTeam(  )
   {
      return self->GetMyTeam(   );
   }

   int GetCurrentFrame(  )
   {
      return self->GetCurrentFrame(   );
   }

   void DeleteFigureGroup( int group )
   {
      self->DeleteFigureGroup( group  );
   }

   void SetFigureColor( int group, double red, double green, double blue, double alpha )
   {
      self->SetFigureColor( group, red, green, blue, alpha  );
   }

   System::String * GetMapName(  )
   {
      return new System::String( string( self->GetMapName(   ) ).c_str() );
   }

   System::String * GetModName(  )
   {
      return new System::String( string( self->GetModName(   ) ).c_str() );
   }

   void EraseGroup( int groupid )
   {
      self->EraseGroup( groupid  );
   }

