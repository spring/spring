Steps taken for last few releases (0.82.X)
==========================================

Make the release
----------------

1) cherry pick a whole lot of stuff / or ensure code we want to release is in some branch one way or another
2) write / update change-log (doc/changelog.txt)
3) edit rts/Game/GameVersion.cpp and commit it:
		${EDITOR} add rts/Game/GameVersion.cpp
		git add rts/Game/GameVersion.cpp
		git commit -m "bump version to 0.82.7.1"`
4) tag the release
		git tag -a -m "0.82.7.1 release" 0.82.7.1`
5) edit rts/Game/GameVersion.cpp and commit it:
		${EDITOR} add rts/Game/GameVersion.cpp
		git add rts/Game/GameVersion.cpp
		git commit -m "post release version bump"`
6) create source-packages:
		git checkout 0.82.7.1
		./installer/make_source_package.sh
7) POINT OF NO RETURN: push to main repo:
		git push --tags origin 0.82-branch
8) Trigger the build of the tag (0.82.7.1) on the buildbot. You may put the tag name in the revision field. Do not set branch (as it is currently an issue for buildbot when translating stack-traces).
9) write the news post
10) once 8) is finished, create portable archive:
		wget http://springrts.com/dl/buildbot/default/master/0.82.7.1/spring_0.82.7.1.exe
		installer/make_portable_archive.sh spring_0.82.7.1.exe
11) you should now have these files:
	* spring_0.82.7.1.exe
	* spring_0.82.7.1_portable.7z
	* spring_0.82.7.1_src.tar.gz
	* spring_0.82.7.1_src.tar.lzma
	Upload them to SF (replace USER with your SF account name):
		rsync -e ssh spring_0.82.7.1* USER,springrts@frs.sourceforge.net:/home/frs/project/s/sp/springrts/springrts/spring-0.82.7.1/
12) post news post
13) download page mirror links:
    Ask someone with access to http://springrts.com/dl/ to put spring_0.82.7.1* stuff there.

After 1 or 2 days, enforce it on the server, if it is a sync relevant change.


Enforcing on server
-------------------

This only needs to be done if it is a sync relevant change.

1) Ask aegis or a lobby admin to enforce the new version.
2) Update the version templates on the Wiki.
	This also changes the download page.
		http://springrts.com/mediawiki/index.php?title=Template:EngineVersion:Stable:Major&action=edit
		http://springrts.com/mediawiki/index.php?title=Template:EngineVersion:Stable:Minor&action=edit
		http://springrts.com/mediawiki/index.php?title=Template:EngineVersion:Stable:Patchset&action=edit
3) Update the default downloads for each platform on SF.
	Installer .exe for Windows, .tar.gz for all other platforms.
	Do so through the file(s) properties on this page:
		https://sourceforge.net/projects/springrts/files/springrts/spring-0.82.7.1/


Old stuff, to be cleaned up later
=================================

Checklist of stuff that needs to be doing at release time,
not necessarily in the optimal order, but I tried to make it pretty much right.

Spring engine:
Before you start:
- if necessary, increase PATHESTIMATOR_VERSION to force repathing
- make sure changelog is up to date (including version number!)
- talk to people to fix their apps which get included in the installer (Lobby, Downloader...)

Then proceed:
- make sure all packages build correctly (test building on buildbot, test-generate source packages (and check them if they work))
- set buildbot to only produce builds if forced to (comment out schedulers)
- test source package linux (or not if you feel brave)
- test source package windows (ditto)
- test installer (NEVER EVER SKIP THIS NO MATTER HOW SMALL THE CHANGES)

- bump version number in rts/Game/GameVersion.cpp
- tag the released revision in GIT as e.g. "0.78.0"
- have buildbot compile installer and make source packages
- upload installer to fnord.clan-sy.com
- upload installer to the big Spring file sites (watch out for notification bots,
  it can create chaos if you upload early in release process and the upload gets
  widely announced already.)
- upload spring_X.XXbX_src.tar.bz2 to fnord.clan-sy.com
- upload spring_X.XXbX_src.zip to fnord.clan-sy.com
- upload spring_X.XXbX_src.tar.bz2 to Berlios (not too important)
- upload spring_X.XXbX_src.zip to Berlios (ditto)
- make news post (don't forget to thank contributors, link to installer and source)
- bump version number in rts/Game/GameVersion.cpp to e.g. "0.76b1+" (note the plus)
- enable automatic builds in buildbot again

TASServer (when only spring update):
- update updates.xml with OFFERFILE entries for current Spring version.
- as admin, do "reloadupdateproperties" in TASServer ($Local in TASClient)
- as admin, do "setlatestspringversion 0.76b1"  (replace version!)
- as admin, "broadcast" a message that everyone will be kicked due to upgrade
- as admin, kick all users from the server ("killall [reason]")
- set correct Spring version in the shell script that starts server, so it
  won't boot people if it ever gets restarted (e.g. power outage)

TASServer (full update, ie. Spring+TASServer):
- easiest is probably to release Spring separately, but usually this is
  impossible due to compatibility things.
- update updates.xml with OFFERFILE entries for current lobby version(s)
  and current Spring version.
- set correct spring version in the shell script that starts server.
- update sourcecode to latest version
- stop server
- compile server
- do whatever is needed to migrate data, if anything.
- start server
- hotfix the issues that usually arise during TASServer upgrade :-)
- commit the hotfixes
- tag the used server in SVN as e.g. "tags/Lobby/TASServer 0.35"
